#version 400

in vec4 position;                // The vertex positions within the chunk.

uniform vec3 normal;
uniform vec3 worldPosition;      // The base position of the chunk in the world.
uniform mat4 mvp;                // Model-view projection matrix.
uniform int worldHeight;

varying float texcoord;

out Data{
    vec3 fnormal;
    float depth;
} data;
  
void main(void){  
    vec4 vectorOffset = vec4(worldPosition, 0.0);
    vec4 vertex = vec4(position.x, position.y, position.z, 1);
    data.fnormal = normal;
    data.depth = 1-(min(1,length((mvp * (vertex + vectorOffset)).xyz)/worldHeight));    
    texcoord = mod(float(position.w + worldPosition.y) / worldHeight,1);
    gl_Position = mvp * (vertex + vectorOffset);
}
